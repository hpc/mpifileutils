#!/bin/bash

##################
# Load mpicc and mpicxx into $PATH
##################

#. /usr/share/[mM]odules/init/bash
#module load mvapich2-gnu-psm/1.7

. /usr/local/tools/dotkit/init.sh
use mvapich2-gnu

# MVAPICH
#curdir=`pwd`
#export PATH="${curdir}/mvapich2/install/bin:$PATH"

# Open MPI
#curdir=`pwd`
#export PATH="${curdir}/openmpi/install/bin:$PATH"

##################
# Build software
##################

set -x

OPT="-g -O0"

installdir=`pwd`/install

# add latest autotools to our path
toolspath=`pwd`/autotools/install/bin
export PATH="${toolspath}:$PATH"

mkdir -p deps
cd deps

# fetch dependencies
if [ ! -d libcircle.git ] ; then
  git clone git://github.com/hpc/libcircle.git libcircle.git
fi
if [ ! -d lwgrp.git ] ; then
  git clone git://github.com/hpc/lwgrp.git lwgrp.git
fi
if [ ! -d dtcmp.git ] ; then
  git clone git://github.com/hpc/dtcmp.git dtcmp.git
fi
if [ ! -f libarchive-3.1.2.tar.gz ] ; then 
  wget http://www.libarchive.org/downloads/libarchive-3.1.2.tar.gz
fi

if [ ! -d libcircle.git ]; then
  echo "missing libcircle"
  exit 1
fi
if [ ! -d lwgrp.git ]; then
  echo "missing lwgrp"
  exit 1
fi
if [ ! -d dtcmp.git ]; then
  echo "missing dtcmp"
  exit 1
fi

# clean out our autotools install directory
toolsdir=`pwd`/autotools/install

# add autotools install bin to our path
export PATH=${toolsdir}/bin:$PATH

# build dependencies
pushd libcircle.git
  git pull origin master
  git pull --tags origin master
# comment me to get most recent version of libcircle
# uncomment me to get specific tagged version libcircle
  git checkout 0.2.0-rc.1
  export CFLAGS=${OPT}
  ./configure \
    --prefix=$installdir \
    --disable-silent-rules && \
  make VERBOSE=1 && \
  make VERBOSE=1 install
  if [ $? -ne 0 ]; then
    echo "failed to configure, build, or install libcircle"
    exit 1
  fi
  git checkout master
popd

pushd lwgrp.git
  git pull origin master
  git pull --tags origin master
  git checkout v1.0.1
#  make distclean
#  ./autogen.sh
  export CFLAGS=${OPT}
  ./configure \
    --prefix=${installdir} \
    --disable-silent-rules && \
  make && \
  make install
  if [ $? -ne 0 ]; then
    echo "failed to configure, build, or install liblwgrp"
    exit 1
  fi
  git checkout master
popd

pushd dtcmp.git
  git pull origin master
  git pull --tags origin master
  git checkout v1.1.0
#  make distclean
#  ./autogen.sh
  export CFLAGS=${OPT}
  ./configure \
    --prefix=${installdir} \
    --disable-silent-rules \
    --with-lwgrp=${installdir} && \
  make && \
  make install
  if [ $? -ne 0 ]; then
    echo "failed to configure, build, or install libdtcmp"
    exit 1
  fi
  git checkout master
popd

rm -rf libarchive-3.1.2
tar zxvf libarchive-3.1.2.tar.gz
pushd libarchive-3.1.2
#  make distclean
#  ./autogen.sh
  export CFLAGS=${OPT}
  ./configure \
    --prefix=${installdir} && \
  make && \
  make install
  if [ $? -ne 0 ]; then
    echo "failed to configure, build, or install libarchive"
    exit 1
  fi
popd
